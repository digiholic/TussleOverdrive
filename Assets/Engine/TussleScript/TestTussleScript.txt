Action Idle
	Length 1
	Animation idle
	ExitAction Idle
	StartGroup State Transitions
		DoTransition(checkFall)
		DoTransition(neutralState)
	EndGroup
EndAction

Action Move
	Length 1
	Animation walk
	ExitAction Stop
	StartGroup Set Up
		InitVar(action.direction,owner.facing)
	EndGroup
	StartGroup Tear Down
		ChangeXPreferredSpeed(0,false)
	EndGroup
	StartGroup State Transitions
		DoTransition(moveState)
		DoTransition(checkFall)
		IfVar(action.frame,0,>)
			IfButtonBuffered(forward,0,true)
				DoAction(Dash)
			EndIf()
		EndIf()
	EndGroup
	StartGroup Before Frame
		ChangeXPreferredSpeed(actor.max_ground_speed,false)
		Accelerate(actor.static_grip)
		IfVar(action.direction,owner.facing,==)
			IfButtonHeld(backward,true)
				Flip()
			EndIf()
		Else()
			IfButtonHeld(forward,false)
				Flip()
			EndIf()
		EndIf()
	EndGroup
EndAction

Action Dash
	Length 1
	Animation dash
	ExitAction RunStop
	StartGroup Set Up
		InitVar(action.pivoted,false)
		InitVar(action.direction,owner.facing)
	EndGroup
	StartGroup Tear Down
		ChangeXPreferredSpeed(0,false)
	EndGroup
	StartGroup State Transitions
		DoTransition(dashState)
		DoTransition(checkFall)
	EndGroup
	StartGroup Before Frame
		IfVar(action.pivoted,false,==)
			IfButtonHeld(backward,true)
				Flip()
				SetVar(action.pivoted,true,false)
			EndIf()
		EndIf()
		Accelerate(owner.static_grip)
	EndGroup
	StartGroup frame_0
		ChangeXPreferredSpeed(owner.max_ground_speed,false)
	EndGroup
	StartGroup Last Frame
		PassVar(direction,owner.facing)
		PassVar(lastPrefSpeed,owner.XPref)
		DoAction(Run)
	EndGroup
EndAction

Action Run
	Length 1
	Animation run
	ExitAction RunStop
	StartGroup Set Up
		InitVar(action.direction,owner.facing)
	EndGroup
	StartGroup Tear Down
		ChangeXPreferredSpeed(0,false)
	EndGroup
	StartGroup State Transitions
		DoTransition(checkFall)
		DoTransition(runState)
	EndGroup
	StartGroup Before Frame
		Accelerate(owner.static_grip)
	EndGroup
	StartGroup frame_0
		ChangeXPreferredSpeed(owner.run_speed,false)
	EndGroup
	StartGroup Last Frame
		ChangeFrame(0,false)
	EndGroup
EndAction

Action Pivot
	Length 1
	Animation Pivot
	ExitAction Idle
	StartGroup Tear Down
		Flip()
	EndGroup
	StartGroup State Transitions
		DoTransition(checkFall)
		IfButtonHeld(jump,true)
			DoAction(Jump)
		EndIf()
	EndGroup
	StartGroup Before Frame
		Accelerate(owner.static_grip)
		ChangeXPreferredSpeed(0,false)
	EndGroup
	StartGroup Last Frame
		IfButtonBuffered(backwardSmash,8,true)
			PassVar(direction,-1)
			DoAction(Dash)
		EndIf()
		IfButtonBuffered(ForwardSmash,8,true)
			PassVar(direction,1)
			DoAction(Dash)
		EndIf()
		IfButtonHeld(Backward,true)
			PassVar(direction,-1)
			DoAction(Move)
		EndIf()
		IfButtonHeld(Forward,true)
			PassVar(direction,1)
			DoAction(Move)
		EndIf()	
	EndGroup
EndAction

Action Stop
	Length 1
	Animation stop
	ExitAction Idle
	StartGroup Before Frame
		ChangeXPreferredSpeed(0,false)
	EndGroup
	StartGroup State Transitions
		DoTransition(checkFall)
		Accelerate(actor.static_grip)
		IfButtonHeld(Forward,true)
			DoAction(Dash)
		EndIf()
		IfButtonHeld(Backward,true)
			DoAction(Pivot)
		EndIf()
	EndGroup
	StartGroup Last Frame
		IfButtonBuffered(Jump,8,true)
			DoAction(Jump)
		EndIf()
	EndGroup
EndAction

Action RunPivot
	Length 1
	Animation pivot
	ExitAction Idle
	StartGroup Tear Down
		Flip()
	EndGroup
	StartGroup State Transitions
		IfButtonHeld(jump,true)
			DoAction(Jump)
		EndIf()
		DoTransition(checkFall)
	EndGroup
	StartGroup Before Frame
		ChangeXPreferredSpeed(0,false)
	EndGroup
	StartGroup Last Frame
		IfButtonHeld(forward,true)
			DoAction(Dash)
		Else()
			DoAction(idle)
		EndIf()
	EndGroup
EndAction

Action RunStop
	Length 1
	Animation stop
	ExitAction Idle
	StartGroup State Transitions
		DoTransition(checkFall)
		IfButtonHeld(forward,true)
			DoAction(Run)
		EndIf()
		IfButtonHeld(backward,true)
			DoAction(RunPivot)
		EndIf()
	EndGroup
	StartGroup Last Frame
		IfButtonBuffered(Jump,8,true)
			DoAction(Jump)
		Else()
			DoAction(Idle)
		EndIf()
	EndGroup
EndAction

Action Crouch
	Length 1
	Animation Crouch
	ExitAction Crouch
	StartGroup Set Up
		InitVar(direction, actor.forward)
	EndGroup
	StartGroup State Transitions
		DoTransition(crouchState)
		DoTransition(checkFall)
		#Uh.... I dunno how to do this one. Gonna have to figure this out later. Check the python
		#IfButtonBuffered(down,1,true)
		#	DoAction(PlatformDrop)
		#EndIf()
	EndGroup
	StartGroup Before Frame
		Accelerate(actor.static_grip)
		IfVar(actor.canCrawl,true,==)
			IfButtonHeld(forward,true)
				DoAction(Crawl)
			EndIf()
			IfButtonHeld(backward,true)
				Flip()
				DoAction(Crawl)
			EndIf()
		EndIf()
	EndGroup
EndAction

Action CrouchGetup
	Length 1
	Animation CrouchGetup
	ExitAction Idle
	StartGroup State Transitions
		DoTransition(checkFall)
		#This thing again. Figure it out pls
		#IfButtonBuffered(down,1,true)
		#	DoAction(PlatformDrop)
		#EndIf()
	EndGroup
	StartGroup Before Frame
		ChangeXPreferredSpeed(0,false)
	EndGroup
EndAction

Action Grabbing
	Length 1
	Animation Grabbing
	ExitAction GrabRelease
	#TODO grabbing
EndAction

Action HitStun
	Length 1
	Animation hitstun
	ExitAction Tumble
	#TODO hitstun
EndAction

Action TryTech
	Length 1
	Animation tech
	ExitAction Tumble
	#TODO trytech
EndAction

Action Trip
	Length 180
	Animation prone
	ExitAction GetUp
	StartGroup Set Up
		InitVar(duration,60)
	EndGroup
	StartGroup State Transitions
		DoTransition(checkFall)
		IfVar(action.frame,action.duration,>=)
			DoTransition(tripState)
		EndIf()
	EndGroup
EndAction

Action GetUp
	Length 1
	Animation getup
	ExitAction Idle
EndAction

Action Jump
	Length 4
	Animation jump
	ExitAction Fall
	StartGroup Set Up
		InitVar(action.jumpFrame,3)
	EndGroup
	StartGroup State Transitions
		IfVar(action.frame,action.jumpFrame,<)
			IfButtonBuffered(UpSmash,3,true)
				IfButtonBuffered(attack,3,true)
					DoAction(UpSmash)
				EndIf()
				IfButtonBuffered(special,3,true)
					DoAction(UpSpecial)
				EndIf()
			EndIf()
		Else()
			DoTransition(JumpState)
		EndIf()
	EndGroup
	StartGroup Before Frame
		IfVar(action.frame,action.jumpFrame,==)
			SetVar(actor.grounded,false)
			IfButtonHeld(Jump,true)
				ChangeYSpeed(actor.jump_height,false)
			Else()
				ChangeYSpeed(actor.short_hop_height,false)
			EndIf()
		EndIf()
	EndGroup()
EndAction

Action AirJump
	Length 4
	Animation jump
	ExitAction Fall
	StartGroup Set Up
		InitVar(action.jumpFrame,3)
	EndGroup
	StartGroup State Transitions
		IfVar(action.frame,action.jumpFrame,<)
			IfButtonBuffered(Up,3,true)
				IfButtonBuffered(attack,3,true)
					DoAction(UpAir)
				EndIf()
				IfButtonBuffered(special,3,true)
					DoAction(UpSpecial)
				EndIf()
			EndIf()
		Else()
			DoTransition(JumpState)
		EndIf()
	EndGroup
	StartGroup Tear Down
		ChangeYPreferredSpeed(actor.max_fall_speed)
	EndGroup
	StartGroup Before Frame
		IfVar(action.frame,action.jumpFrame,<)
			ChangeYSpeed(0,false)
			ChangeYPreferredSpeed(0,false)
		EndIf()
		IfVar(action.frame,action.jumpFrame,==)
			SetVar(actor.grounded,false)
			ChangeYSpeed(actor.air_jump_height)
			SetVar(actor.jumps,-1,true)
			IfButtonHeld(backward,true)
				Flip()
				#There's not actually a way to do multiplication, so find a way to do this
				ChangeXSpeed(-1*actor.max_air_speed)
			EndIf()
		EndIf()
	EndGroup()
EndAction

Action Fall
	Length 1
	Animation fall
	ExitAction Fall
	StartGroup Set Up
		ChangeXSpeed(0,false)
		ChangeYPreferredSpeed(actor.max_fall_speed,false)
	EndGroup
	StartGroup State Transitions
		DoTransition(airState)
		DoTransition(grabLedges)
	EndGroup
EndAction

Action Helpless
	Length 1
	Animation specialfall
	ExitAction Helpless
	StartGroup Set Up
		ChangeXSpeed(0,false)
		ChangeYPreferredSpeed(actor.max_fall_speed,false)
	EndGroup
	StartGroup State Transitions
		DoTransition(airState)
		DoTransition(grabLedges)
	EndGroup
EndAction

Action Land
	Length 6
	Animation land
	ExitAction Idle
	StartGroup Tear Down
		ChangeXPreferredSpeed(0,false)
	EndGroup
	#TODO L cancelling?
EndAction

#TODO HelplessLand -- how is this different from landing?
#TODO PlatformDrop -- this should probably be a method in the fighter
#TODO Shield -- articles
#TODO ShieldStun -- ^

Action Stunned
	Length 1
	Animation stun
	ExitAction Idle
EndAction

#TODO Trapped -- has to do with grabbing
#TODO Grabbed
#TODO Release
#TODO Released

Action ForwardRoll
	Length 46
	Animation forwardRoll
	ExitAction Idle
	StartGroup Tear Down
		ChangeXPreferredSpeed(0,false)
		#SetInvulnerability(false) TODO new subaction
		#RemoveColorMask() TODO new subaction
	EndGroup
	StartGroup State Transitions
		DoTransition(checkFall)
	EndGroup
	StartGroup Frame_1
		ChangeXSpeed(actor.dodge_speed,false)
	EndGroup
	#Change this frame for different fighters to sync up to your animation
	StartGroup Frame_6
		#CreateColorMask(FFFFFF,22,true,24)
		#SetInvulnerability(true)
	EndGroup
	#EndInvulnFrame
	StartGroup frame_34
		Flip()
		ChangeXSpeed(0,false)
		#SetInvulnerability(false) TODO new subaction
		#RemoveColorMask() TODO new subaction
	EndGroup
	StartGroup Last Frame
		IfButtonHeld(shield,true)
			DoAction(Shield)
		EndIf()
		#The exit action will take care of putting us in Idle if we're not shielding again
	EndGroup
EndAction

Action BackwardRoll
	Length 50
	Animation backwardRoll
	ExitAction Idle
	StartGroup Tear Down
		ChangeXPreferredSpeed(0,false)
		#SetInvulnerability(false) TODO new subaction
		#RemoveColorMask() TODO new subaction
	EndGroup
	StartGroup State Transitions
		DoTransition(checkFall)
	EndGroup
	StartGroup Frame_1
		ChangeXSpeed(-actor.dodge_speed,false) #TODO negatives
	EndGroup
	#Change this frame for different fighters to sync up to your animation
	StartGroup Frame_6
		#CreateColorMask(FFFFFF,22,true,24)
		#SetInvulnerability(true)
	EndGroup
	#EndInvulnFrame
	StartGroup frame_34
		ChangeXSpeed(0,false)
		#SetInvulnerability(false) TODO new subaction
		#RemoveColorMask() TODO new subaction
	EndGroup
	StartGroup Last Frame
		IfButtonHeld(shield,true)
			DoAction(Shield)
		EndIf()
		#The exit action will take care of putting us in Idle if we're not shielding again
	EndGroup
EndAction

Action SpotDodge

EndAction

#TODO air dodge -- Decide if we want one action that listens to the settings or have multiple that the settings choose
#TODO tech dodge -- See if this is still necessary

Action LedgeGrab
	Length 1
	Animation ledgeGrab
	ExitAction LedgeGrab
	StartGroup Set Up
		#CreateColorMask(FFFFFF,settings.ledgeInvulnerability,true,12)
		#SetInvulnerability(true)
	EndGroup
	StartGroup Tear Down
		#TODO notify the ledge the fighter is gone
	EndGroup
	StartGroup State Transitions
		DoTransition(ledgeState)
	EndGroup
	StartGroup Frame_0
		SetVar(actor.jumps,actor.max_jumps
		ChangeXSpeed(0,false)
	EndGroup
EndAction

#TODO LedgeGetup -- This one uses rect coordinates, see if those can be abstracted out